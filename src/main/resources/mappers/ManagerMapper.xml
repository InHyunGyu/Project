<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.debugking.www.dao.ManagerMapper">
	<!-- 게시글 출력 -->
	<select id="getPostCount" parameterType="map" resultType="int">
		select count(*)
		From Posts
		where postType = #{searchItem} and memberId != 'admin'
	</select>
	<select id="selectPostAll" resultType="Post" parameterType="map">
		SELECT
			postNo
			,memberId
			,postTitle
			,postContent
			,to_char(postDate, 'YYYY-MM-DD') as postDate
			,postView
			,postLike
			,postType
			,isAnnouncement
			<if test="originalFile != null">
			,originalFile
			,savedFile
			</if>
			,reported
		FROM Posts 
		where postType = #{searchItem} and memberId != 'admin'
		ORDER BY postNo DESC
	</select>
	
	<!-- 공지 글 출력 -->
	<select id="getNoticeCount" resultType="int">
		select count(*)
		From Posts
		where memberId = 'admin'
	</select>
	<select id="selectNoticeAll" resultType="Post" >
		SELECT
			postNo
			,memberId
			,postTitle
			,postContent
			,to_char(postDate, 'YYYY-MM-DD') as postDate
			,postView
			,postLike
			,postType
			,isAnnouncement
			<if test="originalFile != null">
			,originalFile
			,savedFile
			</if>
			,reported
		FROM Posts 
		where memberId = 'admin'
		ORDER BY postNo DESC
	</select>
	
	<!-- 신고 글 출력 -->
	<select id="getreportCount" resultType="int">
		select count(*)
		From Posts
		where reported >= 1 
	</select>
	<select id="selectreportAll" resultType="Post" >
		SELECT
			postNo
			,memberId
			,postTitle
			,postContent
			,to_char(postDate, 'YYYY-MM-DD') as postDate
			,postView
			,postLike
			,postType
			,isAnnouncement
			<if test="originalFile != null">
			,originalFile
			,savedFile
			</if>
			,reported
		FROM Posts 
		where reported >= 1
		ORDER BY reported DESC
	</select>
	
	
	<!-- 게시글 이동하기 -->
	<update id="move" parameterType="map">
    update Posts
    set
    	postType=#{postType}
    WHERE
    postNo IN
         <foreach collection="postNo" item="postNo"  open="(" close=")" separator=",">
            #{postNo}
        </foreach>
	</update>
	
	<!-- 게시글 삭제 -->
	<delete id="deleted" parameterType="map">
    delete Posts
    WHERE postNo IN
         <foreach collection="postNo" item="postNo"  open="(" close=")" separator=",">
            #{postNo}
        </foreach>
	</delete>
	
	<!-- 공지글 내리기 (취소하기) -->
	<update id="notice" parameterType="map">
    update Posts
    set
    	isAnnouncement=#{isAnnouncement}
    WHERE postNo IN
         <foreach collection="postNo" item="postNo"  open="(" close=")" separator=",">
            #{postNo}
        </foreach>
	</update>
	
	<!-- 멤버등급변경 -->
	<update id="change" parameterType="map">
    update MemberInfo
    set
    	memberLevel = #{memberLevel}
    WHERE memberId IN
         <foreach collection="memberId" item="memberId"  open="(" close=")" separator=",">
            #{memberId}
        </foreach>
	</update>
	
	<!-- 등급별 멤버 출력 -->
	<select id="getMemberInfoCount" parameterType="map" resultType="int">
		select count(*)
		From MemberInfo
		where memberLevel = #{memberLevel}
	</select>
	<select id="selectMemberInfoAll" resultType="Member" parameterType="map">
		SELECT
			memberId
			,memberPwd
			,memberName
			,to_char(signupDate, 'YYYY-MM-DD') as signupDate
			,memberPhone
			,memberBirth
			,memberEmail
			,memberPoint
			,memberLevel
		FROM MemberInfo 
		ORDER BY memberLevel ASC, signupDate DESC
	</select>
	
	<select id="selectMainNotice" resultType="Post">
		select 
			postNo, postTitle, to_char(postDate,'yyyy-mm-dd') as postDate    
		From    
			Posts
		Where 
			isAnnouncement='Y' 
		Order by 
			PostNo DESC
	</select>
	
	<!-- Main 공지글 3개 출력 -->
	<select id="selectMainNotice"  resultType="Post">
	select postNo,postTitle
    From Posts
    Where isAnnouncement='Y' and savedFile != '(null)'
    Order by PostNo DESC
		
	</select>
	
	
</mapper>